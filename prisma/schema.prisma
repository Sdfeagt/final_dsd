datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Trip {
  id                String              @id @default(uuid())
  name              String
  ownerId           String
  destination       String
  days              Days[]              @relation("DaystoTrip")
  hotelName         String
  budget            Int
  budget_split      Boolean
  participantsEmail participantsEmail[] @relation("ParticipantsToTrip")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model participantsEmail {
  id               String  @id @default(uuid())
  participantEmail String
  tripId           String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Trip      Trip?    @relation("ParticipantsToTrip", fields: [tripId], references: [id])

  @@index([tripId])
}

model Days {
  id     String   @id @default(uuid())
  day    DateTime
  tripId String?

  createdAt            DateTime            @default(now())
  updatedAt            DateTime            @updatedAt
  Trip                 Trip?               @relation("DaystoTrip", fields: [tripId], references: [id])
  individualTripDataId String?
  IndividualTripData   IndividualTripData? @relation("DaysToIndividualTripData", fields: [individualTripDataId], references: [id])

  @@index([tripId])
  @@index([individualTripDataId])
}

model IndividualTripData {
  //Every user that gets invited gets that model
  id     String @id @default(uuid())
  tripId String
  email  String

  confirmed     Boolean
  personal_days Days[]  @relation("DaysToIndividualTripData")
  budget        Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserPreference {
  id     String @id @default(uuid())
  name   String
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Destination {
  id        String @id @default(uuid())
  name      String
  continent String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
